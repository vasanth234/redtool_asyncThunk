import { configureStore, createAsyncThunk, createSlice } from '@reduxjs/toolkit';

// Define initial state for the slice
const initialState = {
  // Define initial state properties here
  users:[],
  status:"",
  error:false,
};

export let fetchUse=createAsyncThunk('user/fetch',async()=>{
try{
    const response=  await fetch('https://jsonplaceholder.typicode.com/users');
    const data=await response.json();
    return data;
}
catch(error){
    throw error
}
})

// Create a slice using createSlice function
const userSlice = createSlice({
  name: 'user', // Specify the name of the slice
  initialState, // Pass the initial state
 
  extraReducers:(builder)=>{
    builder.addCase(fetchUse.pending,(state)=>{
        state.status='loading'
    })
        .addCase(fetchUse.fulfilled,(state,action)=>{
            state.status='completed',
            state.users=action.payload
        })
        .addCase(fetchUse.rejected,(state,action)=>{
            state.status='error',
            state.users=[]
            state.error=action.error.message
        })
  },
});

// Export action creators generated by the slice
const store=configureStore({
    reducer:{
        user:userSlice.reducer
    }
})

export default store;
